{"version":3,"sources":["components/Title.js","components/Form.js","components/StyledComponents.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Title","this","props","todos","length","Component","Form","state","text","createTodo","setState","event","target","value","keyCode","onChange","handleChange","onKeyDown","handleKeyDown","onClick","TextBorder","styled","li","List","map","todo","index","removeTodo","id","App","startId","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAEqBA,E,4JACjB,WACI,OACI,uEAAYC,KAAKC,MAAMC,MAAMC,OAA7B,W,GAHuBC,aCAdC,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,KAAM,IAHI,E,8CAMd,WACOP,KAAKM,MAAMC,OAGhBP,KAAKC,MAAMO,WAAWR,KAAKM,MAAMC,MACjCP,KAAKS,SAAS,CACZF,KAAM,Q,0BAGV,SAAaG,GACXV,KAAKS,SAAS,CACZF,KAAMG,EAAMC,OAAOC,U,2BAGvB,SAAcF,GACM,KAAlBA,EAAMG,SAAkBb,KAAKQ,e,oBAG/B,WAAU,IAAD,OACP,OACE,gCACI,uBACEM,SAAU,SAAAJ,GAAK,OAAI,EAAKK,aAAaL,IACrCM,UAAW,SAAAN,GAAK,OAAI,EAAKO,cAAcP,IACvCE,MAAOZ,KAAKM,MAAMC,OAEpB,wBACEW,QAAS,kBAAM,EAAKV,cADtB,iC,GAjCwBJ,a,QCArBe,E,MAAaC,EAAOC,GAAV,wNCCFC,E,4JACnB,WAAU,IAAD,OACP,OACE,6BAEItB,KAAKC,MAAMC,MAAMqB,KAAI,SAACC,EAAMC,GAC1B,OACE,cAACN,EAAD,CAEED,QAAS,kBAAM,EAAKjB,MAAMyB,WAAWF,EAAKG,KAF5C,SAIGH,EAAKjB,MAHDiB,EAAKG,a,GARQvB,aCGbwB,E,kDAEnB,aAAe,IAAD,6BACZ,gBAMKtB,MAAQ,CACXJ,MANO,CACP,CAAEyB,GAAI,EAAGpB,KAAM,sBACf,CAAEoB,GAAI,EAAGpB,KAAM,gBACf,CAAEoB,GAAI,EAAGpB,KAAM,uBAIfsB,QAAS,GATC,E,8CAYd,SAAWtB,GACTP,KAAKS,SAAS,CACZP,MAAM,GAAD,mBAAMF,KAAKM,MAAMJ,OAAjB,CAAwB,CAC3ByB,GAAI3B,KAAKM,MAAMuB,QACftB,KAAMA,KAERsB,QAAS7B,KAAKM,MAAMuB,QAAU,M,wBAGlC,SAAWF,GACT3B,KAAKS,SAAS,CACZP,MAAOF,KAAKM,MAAMJ,MAAM4B,QAAO,SAAAN,GAC7B,OAAOA,EAAKG,KAAOA,S,oBAIzB,WAAU,IAAD,OACP,OACE,gCACE,cAAC,EAAD,CAAOzB,MAAOF,KAAKM,MAAMJ,QACzB,cAAC,EAAD,CACEM,WAAY,SAAAD,GAAI,OAAI,EAAKC,WAAWD,MAEtC,cAAC,EAAD,CACEL,MAAOF,KAAKM,MAAMJ,MAClBwB,WAAY,SAAAnB,GAAI,OAAI,EAAKmB,WAAWnB,a,GAvCbH,aCMlB2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0fa7e10b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Title extends Component {\r\n    render() {\r\n        return (\r\n            <h2>代辦事項清單({this.props.todos.length})</h2>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Form extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      text: ''\r\n    }\r\n  }\r\n  createTodo() {\r\n    if (!this.state.text) {\r\n      return\r\n    }\r\n    this.props.createTodo(this.state.text)\r\n    this.setState({\r\n      text: ''\r\n    })\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      text: event.target.value\r\n    })\r\n  }\r\n  handleKeyDown(event) {\r\n    event.keyCode === 13 && this.createTodo()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <input \r\n            onChange={event => this.handleChange(event)}\r\n            onKeyDown={event => this.handleKeyDown(event)}\r\n            value={this.state.text}\r\n          />\r\n          <button\r\n            onClick={() => this.createTodo()}\r\n          >新增</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const TextBorder = styled.li`\r\n  border-bottom: 2px #777777 solid;\r\n  width: 150px;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 5px;\r\n  background: #FFECEC;\r\n  @media (max-width: 700px) {\r\n    background: #F1E1FF;\r\n  }\r\n`;\r\n","import React, { Component } from 'react'\r\nimport {TextBorder} from './StyledComponents'\r\n\r\nexport default class List extends Component {\r\n  render() {\r\n    return (\r\n      <ol>\r\n        {\r\n          this.props.todos.map((todo, index) => {\r\n            return (\r\n              <TextBorder\r\n                key={todo.id}\r\n                onClick={() => this.props.removeTodo(todo.id)}\r\n              >\r\n                {todo.text}\r\n              </TextBorder>\r\n            )\r\n          })\r\n        }\r\n      </ol>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport Title from './components/Title'\nimport Form from './components/Form'\nimport List from './components/List'\n\n\nexport default class App extends Component {\n\n  constructor() {\n    super();\n    let list=[\n      { id: 0, text: '吃早餐'},\n      { id: 1, text: '上學'},\n      { id: 2, text: '吃午餐'}\n    ]\n    this.state = {\n      todos: list,\n      startId: 3\n    }\n  }\n  createTodo(text) {\n    this.setState({\n      todos: [...this.state.todos, {\n        id: this.state.startId,\n        text: text\n      }],\n      startId: this.state.startId + 1\n    })\n  }\n  removeTodo(id) {\n    this.setState({\n      todos: this.state.todos.filter(todo => {\n        return todo.id !== id\n      })\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Title todos={this.state.todos}/>\n        <Form \n          createTodo={text => this.createTodo(text)}\n        />\n        <List \n          todos={this.state.todos}\n          removeTodo={text => this.removeTodo(text)}\n        />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}